%!PS-Adobe-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Pasted Graphic.pdf)
%%Creator: (Preview: cgpdftops CUPS filter)
%%CreationDate: (Friday, November 02 2018 10:48:10 MST)
%%For: (Tim Jenness)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%PageOrder: Ascend
%RBINumCopies: 1
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments
userdict/dscInfo 5 dict dup begin
/Title(Pasted Graphic.pdf)def
/Creator(Preview: cgpdftops CUPS filter)def
/CreationDate(Friday, November 02 2018 10:48:10 MST)def
/For(Tim Jenness)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *ExternalTray NotInstalled
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Finisher NotInstalled
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *InnerTray2 NotInstalled
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *OptionTray NotInstalled
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *ShiftTray NotInstalled
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIPaperPolicy PromptUser

  <</DeferredMediaSelection true>> setpagedevice
  <</Policies << /PageSize 2 /MediaType 2 >> >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *PageSize Letter
<<
  /PageSize [612 792] /ImagingBBox null >> setpagedevice 
  false setedgetoedge
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Resolution 600dpi
<</HWResolution[600 600]>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RPSBitsPerPixel 1BitsPerPixel
1 setbitsperpixel
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIPrintMode 0rhit

  << /PostRenderingEnhance false >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Duplex None
<</Duplex false>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *ColorModel CMYK
(cmyk) RCsetdevicecolor
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RPSRGBcorrect DetailBright
(precision-dark) RCsetrgbrevision
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RPSColorRendDict Auto
(auto) RCsetcolorprofile
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RPSDitherType Auto
(auto) RCsethalftonetype
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RPSBlackMode gray
(gray) (gray) (off)  /RDeviceProcSet 
/ProcSet findresource /SetPureBlack get exec
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RPSBlackOverPrint False
(off) RCsetblackoverprint
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RPSColorSep None
(none) RCsetprintseparation
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Rcmyksimulation Off
(None) RCsetcmyksimulation
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Rimagesm Off
(off) /RDeviceProcSet /ProcSet findresource /SetImageInterpolate get exec
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIRotateBy180 Off

  0 /RDeviceProcSet /ProcSet findresource /SetImageRotation get exec
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIOrientOvr Off
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RICollateKind Normal
/RICollateKindValue true def
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Collate True
<</Collate true
  /CollateDetails <</Type 6 /AlignSet RICollateKindValue>>
  >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *MediaType Auto
<< /MediaType (Auto) >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *OutputBin Default
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *StapleLocation None
<< /Staple 0 >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIPunch None
<< /Punch 0 >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIWatermark Off
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIWMText Confidential
userdict /RPS_WMdict get begin
 /RPS_WM_str (CONFIDENTIAL) def end
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIwmFont HelveticaB
userdict /RPS_WMdict get begin
 /RPS_WM_font /Helvetica-Bold def end
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIwmSize 36
userdict /RPS_WMdict get begin
 /RPS_WM_size 36 def end
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIwmAngle 45Deg
userdict /RPS_WMdict get begin
 /RPS_WM_angle 45 def end
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIwmTextStyle Gray
userdict /RPS_WMdict get begin
   /RPS_WM_color { 0 setgray }  bind  def
   /RPS_WM_Pattern {
    <<
        /PatternType 1
        /PaintType 1
        /TilingType 3
        /BBox [ 0 0 1 1 ]
        /XStep 1 
        /YStep 1 
        /PaintProc {
            begin
                RPS_WM_color
                8 8 true [ 8 0 0 -8 0 8 ]
                <88002200 88002200> imagemask
            end
        }
    >> [ 1 0 0 -1 0 1 ] makepattern
    setpattern }
   bind def
   /RPS_WM_draw {   %% RPS_WM_mask
    RPS_WM_str false charpath fill
  } bind def end
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIBannerPageInputSlot Auto
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIBannerPageMediaType Auto
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIBannerPagePrint False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Booklet None
<<
   /Booklet  0
>>
/RDeviceProcSet /ProcSet findresource /SetBooklet get exec
%%EndFeature
} stopped cleartomark
% x y w h ESPrc - Clip to a rectangle.
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
% x y w h ESPrf - Fill a rectangle.
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
% x y w h ESPrs - Stroke a rectangle.
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 612 792
%%BeginPageSetup
%%EndPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: ANKMSB+HelveticaNeue-Bold
%!FontType1-1.0: ANKMSB+HelveticaNeue-Bold 1.0000.1.0000
14 dict begin/FontName /ANKMSB+HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /D put
dup 34 /a put
dup 35 /t put
dup 36 /space put
dup 37 /B put
dup 38 /u put
dup 39 /l put
dup 40 /e put
dup 41 /r put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000386670676D00000000000000D400000428676C796600000000000004FC0000062C686561640000000000000B2800000036686865610000000000000B6000000024686D74780000000000000B84000000286C6F63610000000000000BAC000000166D6178700000000000000BC400000020707265700000000000000BE4000000FB14006D0085008D009C00000010004BFF0E0005020E00CA02110000140074006B0084008E007F009D00000011FF4A000D0205000E02CA0011B800002C4BB800095058B101018E59B801FF85B844001DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B80003265358B0032545B8014050582321B8014023211BB003254523212321591B2159442DB800092C4B535845441B2121592DB8000A2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8000B2C2020456944B001602DB8000C2CB8000B2A212DB8000D2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8000E2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000F2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800102C2020456944B001602020457D691844B001602DB800112CB800102A2DB800122C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800132C4B535845441B2121592DB800142C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800152C2020456944B001602DB800162CB800152A212DB800172C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821


00001C2BBF0012002C0025001A0012000C0000001C2BBF00130024001F001A0012000C0000001C2B00BF000E0030002500200017000C0000001C2BBF000F0034002B00200017000C0000001C2BBF0010002A0025001A0012000C0000001C2B00BA00140004001B2BB8000D20457D691844B8000A2B00BA00010002000C2B01BA00030002000C2B01BE00030028002000190012000B00122BBE00040024001D00170011000A00122B00BE00010033002A00210017000E00122BBE0002002A0022001B0013000C00122B00BA0005000400112BB8000020457D691844B800002B00
00>] def
/CharStrings 10 dict dup begin
/.notdef 0 def
/space 1 def
/B 2 def
/D 3 def
/a 4 def
/e 5 def
/l 6 def
/r 7 def
/t 8 def
/u 9 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1018 -481 1437 1141}def
/UniqueID 4174458 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B4F1C51BADFF3495C2924BE71970B75EDF2A199B50F98194813A33F0031D51718A2986D693660B31148EB7E847AF413293AC0BB72B526878421A7FC76052172227BCD5D22EE96DD8463A8FCD4ECF18B213CEDEB0652C35DD56FBBEC6ED280ABCF8245D10844C98E67F758BBB6F049C5B0C98EFEE62F6098D0F9E29D809E74FC08BA638D00C5191A8F9DF624AC25E5D0647F2892522CD3A5AE929C3DA04EE86C21624258CEDE6AC2B5C89376235AF0B50E5D619F464D34BD57187BEAAC446A23A519F27EF69C6590E0ACD04C87C97B4933FE3C3C347777D255BB390057AC032E04CAE01F1182FD54B4C1088F67DF9E6C26451C9B9E8A0C146DA84FC4CB56132EBDD79A16DB1EC8451B2CA8A6862F4ACAB1A5F6756210D89A31B5177EEFAB01FD41978479028B635DC47DD1120B821C0233490AA0EDAB07F49BF50FE5C2CBEC9D33194234380CACA79D643F4D34DB0043CA72EC27145534F38710AC38AEFC85B8CE8DC5206A06260AA34D0B0A4C41BC3151801E9A72FEDCECE37C286618A14B591879A157186E70C5B29B7630CFB959CD7CA19813EBCAF0B7053FA22D5A212E87A99D176B43711763A94C4F6BA04C4FF1ADBAFA95BEB71DBBC8432CBA4B67C8E01BA5134FC835833F753754C2319EB37A48C085F6334DED38DC3C74A1E4A235B8E4906CC0C898BCBF1F6FEF7AA4D79DDBBAF4CAFAAB728A7352B922594ABF0B7A537AD0B04E9976680F3D8F69BDBF74DCCD7ABE336BCA59CB91A1608D526CCDAF5
37B1AED663CCD7039298B694CBFD4DFC61E6216C1CFDA33BEDA634A9411BF0967A5482131C3634A5BDBB6802DC16867447E3B86BCFB65F80125EE1CA14DC905E79B0CAA0AF980297FB1AA73163CB00CA30915084F8FE3A2D19A4E19EEA21372D6967840DBCBB91643C9DD5C123D8FF6E5320ED483C4D2069F21D2E3CCC4809A4628DA4DB0D26D7DFDD72FE8EE34A02BC1A56544BE5701B4AA50C6C13CEEF7E0B10299022DD5A370E0030E81FECFD64E5B4D33B4E6D62A5FA96B2F366F505DE1CC2534542E6970774D3797697CFAD9CE6251032FAA6B327A1D93A69622F74864CBA2C66CC5D080C23D41A4E70AC1F6DE08052EC1C0B4EDE5155341E39A1B177EA3713B4ED7A268E446DA7BEDAC0D20A57126C3E17A079BBDEE2234D67155C10C3B584073E21E252F78F68C86BCC7EF66DAEB64D931B5A0F25E570E8941237F0242F725CEB51011FE04CE71525358FA7A1E6B62D37B0E6D24B98F6C0430B0E453B46334F0A9BFA1347A56E17DDADD2EEE2B9EE054D318A3875CB927165A3DE3351BA5CF5FC09878D01C1C3A721069B73A1DC28F9C11CBA3E23E7430AEAC4DB221F8FEAEBBA42A18ACA714DB6B37D017445FFDE0CB5939FCE16D402E5C57FA75635CAFEC89D1353EA69DB50B8975F550D88E543B065E18988CB1A5A54AF19129CBAFD4AF543943369B027A3712FA3CB365696F2A9CEA460AFDAD59F6222D1CE11102ADF4ACC586F8986DE8EEC4D5FC466E7F0A4BF17A6060BA322095C51E64C9F70BF4D1CE6DAEBAE144B67E0E06705D81A088916611CC7A151A42F0EF724AEFC9973D74ABA7D171B2FF7FFE2276D1548B24D71A595BF1CB17EDAAC8C81C36FA2B2459B148E14AE776BCC6424730147BE1283320258A9194EB441BDDE893870F725F1C4A385A29A83A4704A0F1B8D53E6462490796866B41A6E5FA7E247C26426464B80514058FDE89ADDA294463CB3C4CBF0B7701AA8EC76368E86248A284C56D4C2297EB8A6FACA69E9A781905094CB9D1D4426961ACD30B355ABEBE1160191E0C39A0D582B916A503B276CAE17713EF877620BDB5F6BC38BF19BE31B6A2F7113C8675AD3F3061427EBB1367E3D7120C7AE441E3515A8F329340DC037DA4A075EDD08AAC88075241AE50BFFA52A0C288A6BF8CF2998969A37D03E62FED0B132677EFF569479F3BE1C2DF5E3C0D84F9F69E9607F810C49953C634B90761C56485B32A71A0D122DD773B525322E980735335FFEC5DC63F7092AD790A4AB932B9E1293F5E5AB88B1356F3E6C4EB7B34E45DBAC5A2E4C130A502E9820F8542AE4AAB6596CD31E8FDBEC924BBE8C8EDB41C1F9052FD2A04FB330F002E83B06469C0D3CB7C4BF7D2A9DB71B9A86B70AA4F5BB5980DD86B35810825F842482EE8FF9CB9EFC5F98399BB7EAA29F57B77F00670F9DE7A7AC015D52C760DB86FC8DA2AD93B7
B76A047F023DCEBD4E1B44669BBB6F3799BC6C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/ANKMSB+HelveticaNeue-Bold cguidfix
/F1.1/ANKMSB+HelveticaNeue-Bold renmfont
%RBIBeginFontSubset: ECSTOV+HelveticaNeue
%!FontType1-1.0: ECSTOV+HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /ECSTOV+HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /B put
dup 34 /u put
dup 35 /t put
dup 36 /l put
dup 37 /e put
dup 38 /r put
dup 39 /space put
dup 40 /C put
dup 41 /i put
dup 42 /n put
dup 43 /A put
dup 44 /P put
dup 45 /I put
dup 46 /S put
dup 47 /c put
dup 48 /h put
dup 49 /m put
dup 50 /a put
dup 51 /R put
dup 52 /g put
dup 53 /s put
dup 54 /y put
dup 55 /D put
dup 56 /o put
dup 57 /F put
dup 58 /p put
dup 59 /T put
dup 60 /k put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





03005F001800015D41030020001800015D410300B0001800015DB8001BDCBA0023000D0010111239B8000310B80028D0B800282FBA002900000003111239B8001B10B8002CDC00B800012FB8000E2FB800192FBA0026000800032BB8002610B8000810B80013D0B8002610B80020D0303113113311343E0233321E0215113311343633321E0215113311342E02232206072E01232207233540550F2135251D25160955483F1F27160855192D3F2733551A104E306D3A020205FDFB01420F2D2A1E111F2A19FEAD01423C48121F2A18FEAD017B283924112E2A3028584C00000000010040000001EC021100170045BA0003000000032BB8000310BA000E000B00032BB8000E10B8000310B80015D0B800152FBA00160000000311123900B800012FB8000C2FBA0013000800032BB8001310303113113311343E0233321615113311342E022322072335405513263927313855112A44337335020205FDFB0124233B2C183830FEA201542A45321C5E520000020024FFF5021A02110013002700CBB800282FB800292FB8002810B80014D0B800142FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8002910B8001EDCB8000ADC410500DA000A00EA000A00025D411B0009000A0019000A0029000A0039000A0049000A0059000A0069000A0079000A0089000A0099000A00A9000A00B9000A00C9000A000D5D00BA000F001900032BB8000F10BA0023000500032BB8002310303113343E0233321E0215140E0223222E0227141E0233323E0235342E0223220E027E192C3B21213B2C19192C3B21213B2C195A20405E3D3E5D402020405D3E3D5E402001022F49321A1A32492F2F49311A1A31492F39624929294962393963492A2A4963000000020043FF3B022D02110018002C00ADB8002E2FBA0018000000032BB8001810B80002D0B8001810B80004D0B800042FB8002E10B8000EDCB8001810B80016D0B800162FB8000E10B80019DC410500DA001900EA001900025D411B0009001900190019002900190039001900490019005900190069001900790019008900190099001900A9001900B9001900C90019000D5DB8001810B80023D0B800232F00B800012FBA0013002800032BB8001310BA001E000900032BB8001E10303113113311331E0333323E0235342E0223220607233505140E0223222E0235343E0233321E024355020E292E2F133B593B1D1E3B593C365A1502013B10243B2C2C3E271211263C2B293D27130205FD36010A171F12082A49623737624B2C272B46FE2648382221364726244637222036450000000001003D0000014D0213000E0027BA0003000100032BB8000310B8000DD0B800


00>] def
/CharStrings 29 dict dup begin
/.notdef 0 def
/space 1 def
/A 2 def
/B 3 def
/C 4 def
/D 5 def
/F 6 def
/I 7 def
/P 8 def
/R 9 def
/S 10 def
/T 11 def
/a 12 def
/c 13 def
/e 14 def
/g 15 def
/h 16 def
/i 17 def
/k 18 def
/l 19 def
/m 20 def
/n 21 def
/o 22 def
/p 23 def
/r 24 def
/s 25 def
/t 26 def
/u 27 def
/y 28 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C926BAEAB28275C745AF1AE9BF51BC067C3C015CE8D2E034177832EFBD217AB3FEB378FA64DE26ECBA69019FAEC026A582206DA7299104FADDE9548D9EAA5F6C271AF29DDC0E999FA3F024188030DE07C63A898D3F84EF1B05F64F5579762246320796DD56E32C4A30FE75F5BAF1656B6936B35D2AB83E6DD2F225568AACF33738CEEFE4EC37EDA9E0F1F715D4DBB12E6E26314226E30815136C5BF8859C0EA1D0F2DEFCEEE9A1C85DD134433C20028D47FE79F3DC0E1406744DB578C2F549234F7F7CD2934C8FFE8D38C58DDA08F1744AC9B3E12717DD650D3F11DF75539CF18800A9C13E05DF2D530702A69CE866D87D0C0D5E466C3941AF9A0AC8B43BC4911E55A210810FFB09A8B44AE92823200BC550613E1182D6F5514568B3D2BEC37EA410AC20C41042ED51C46344B354F71FA583E4AD926D25CA0A2BA8532425400AA9ECF95670687F8B73BCA42FFD5A24936FEFB454A34D90EE7A6A49106BE17F983DB5C8A48F1B18EEEFE48D24223F48BBB636F6FE8EB4C85184D59C0E2EBBF831E74B3549113F16B448C94BF748AEB649B5A196ECA910A4D1A26648824A3BA3759060584F76EB0079106D1FF347AA9C017CB5BE4B000635E3328204D24900234CEFFF48796AED8A0DADA8A6901E8AC9999A1A4E54D47CB15CD3138CC9FAC4478AD337DE84F218BF359E1848384DF32070D0E573BDA6186DB656A0FE4702B5BED24D2A5BC823DD987A92E0B31BB4F3EB8DE277CA7996BBE2161F1AA2567D0DA1B4BAD

126DB500953F49422CCEF76FFA94A4EBB1264C64DB907B85F4900931C93686A759AF9BAE6BB4226A4960D7C37B2EFA092CAE4AEE0B3B9840B5C3F693FCFFA93C07CDF6D59B3818F4E96712D9C2C678263A304057BFC547DF58B7DE2CA00A1F26914A6477628195C16DD669CF64750057C002A54DEDD4C6754B28AAF2CD02A6B068F70A18A9D0B204C0FD2418E77098B27CEACC38DA46BCDAE227840B98912EA4C27BCC47DF65C9522F2A2E8EE9609EE0E2ADAF7D2C195C7A3E873E64332B90B727223507DC6974D20AAD7FE37974D43E59C2E1BE0BF47FCBFFEE148FF2A9E4B39045BA785BB70791C81EC11DA53DE862B83520902DE097C013EE1DEB166B351AF1C3257F6982925B0D763CEEDD9331B531277FF04A9F0E5D795E4E1F36A4FBA1D585D68EAF4E3B8A1EBBCE0EEFE799B3ACEE5DDFADFA1B4890FC0D6294B12A60112DE405A9495F6ABFAF69B5B691147FE5A8AEE7B911F42B6715D0CAF2AF1C68A927F2446CB23F6ACD6ABA81A5D1AC3683C69570988B7BEC65B55C776697BFC45FF76EFABB6B24FD95A9215738C4C4A0F2464BD703D69A9F29F8CE4181378A5E01DC43B2160C0AAC467DF3517D17EC83B255EE805B137DB9F15F2D17056C55798FA2074263C94E955F1D89B077B8A3390C51C05EF554577FFCD58C10C5EA833551872D9D655AA7FCD1BD9E54AAA9603806CFDC10C11BEC44EAB83D576F2B85D911837BF71129299C0A69DF1B58ADE1CD53D842065292B4168E82540125F3DE33D42E833085E5C29BB6468C090F6B7B72799D41D8A047EDDE785D1AFBE5FCFDFA0A31DB49158A4B8C0074758853327EF0999DA6A4302A8A5E197DFFDD47DAA91D63D945733513AF1C23B5CE55BC70CFAAB6660E448757BFBCF114D6A28F4D556DA6E8E42D00140668D41388814E6CEAC89637B2BDD350EA4B3310191269F7F01C94032321505CD85CB91CD2B8F3C6EF684525C43143A55B05D48866112D4A6D96F67BB65FE76F1711ECE2612BB95C04D394DBF02F2C6C84C734C185BEBD7B7171A28281F840A32371907E4980B6C22A3F145CEF00CE97D8229987ED182BB22825C5738B3626CD6730A2324CBFAC0B753F9B5B545211AF99CAD1DDCBE603ADC817F0CA0DC57017E507485C4C009AF9950AD98BDAF714353C610A5FD4D4CF49B1BB1DE7968360C1FDCD20D0004F815F6B0A8BB6B3BE38D905AC32CC22BE57ECD8601B7C25EE068D07FE6316B6F36B95CEE298178463939A46756F281CE89A179171B367E15B30F779025D55B7C3770A0B5D4DEDA18E12FD91927CC6D96F0591DC5A59C04855F57FF3A5FD06C2672F3BB22AE398E5A3DE3A7254D26B95E6FF32587BE961A35A194C50410DD34E7EF708C1370D3A1FF3D7F53558C0BEE588F86CBD53DEA8ABB8A74F270ACED40AAB8CA5F47D47D9EEC4E4048963367FF11723AF7897


F8A2A3E92C733C9BC77E140B389A081A2EBD0F5CE4C0F52414DF143268660DD8C13D32C9A243D9E298EE3B3A3249EBB7DA049D9CFC5D3FB97D64F315C1049B9E008CB2B1F606CA58922A3631AD21C2BA67A27D2DCBF66A5CE610D909A95C6D3F0FC1037E1DFC56C8C273686B6E0FF68A6D97B0309201A097CDCBED4A174417606A6D25F4459660AEA82068FD15F8DF32E4B1A3AEB1D1EF1932B8059F42075B453A3EE21361F320962E9338A97B23E7133671E672026754232D0900E75C0DB21082B5BD85ADF0844618532F6194440E0B8978B8862C3DD49D74B8DFEBA4DCE515E79EBF8BFC3E2AC157501F82D8B4ED5F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/ECSTOV+HelveticaNeue cguidfix
/F2.1/ECSTOV+HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
12 742.90491 m
600 742.90491 l
600 49.095112 l
12 49.095112 l
h
W
12 49.095119 588 693.80981 rc
12 49.095119 m
600 49.095119 l
600 742.90491 l
12 742.90491 l
h
f
/Cs2 SC
1 1 1 sc
12 742.90491 m
600 742.90491 l
600 49.095119 l
12 49.095119 l
h
12 742.90491 m
f
15.26063 538.13849 m
596.73938 538.13849 l
596.73938 52.362671 l
15.26063 52.362671 l
h
15.26063 538.13849 m
f
5 w
1 J
1 j
0 0 0 sc
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1187 -33 m
1722 -33 l
1722 413 l
1187 413 l
h
1187 -33 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.089183 306 295.25049 cm
/F1.1[ 24 0 0 -24 0 0]sf
-262.5 -195 m
(!"#"$%&#'\(\))[ 17.784000 13.776000 8.448000 13.776000 6.672000 16.896000 14.232000 8.448000 6.192000 13.776000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
134.27361 473.87659 m
477.72641 473.87659 l
477.72641 401.99051 l
134.27361 401.99051 l
h
134.27361 473.87659 m
f
1 w
0 0 0 sc
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1296.5 26 m
1612.5 26 l
1612.5 92 l
1296.5 92 l
h
1296.5 26 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.089183 306 437.93359 cm
/F2.1[ 12 0 0 -12 0 0]sf
-43.998001 3.832001 m
(!"#$%&'\($\)%*#'+,-)[ 8.220000 6.672000 3.780000 2.664000 6.444000 3.996000 3.336000 8.664000 2.664000 2.664000 6.444000 6.672000 3.780000 3.336000 7.776000 7.776000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
134.27361 95.494331 m
134.27361 153.0032 l
134.27361 156.9713 170.91431 160.1918 216.0609 160.1918 c
261.2077 160.1918 297.84839 156.9713 297.84839 153.0032 c
297.84839 95.494331 l
297.84839 91.526222 261.2077 88.305717 216.0609 88.305717 c
170.91431 88.305717 134.27361 91.526222 134.27361 95.494331 c
f
0 0 0 sc
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1296.5 373.39999 m
1296.5 320.60001 l
1296.5 316.95679 1330.212 314 1371.75 314 c
1413.288 314 1447 316.95679 1447 320.60001 c
1447 373.39999 l
1447 377.04321 1413.288 380 1371.75 380 c
1330.212 380 1296.5 377.04321 1296.5 373.39999 c
1296.5 320.60001 m
1296.5 324.24319 1330.212 327.20001 1371.75 327.20001 c
1413.288 327.20001 1447 324.24319 1447 320.60001 c
S
/Cs1 SC
0 sc
1.086876 0 0 -1.089183 216.0609 124.2488 cm
-22.007999 7.1320009 m
(./0%12)[ 7.776000 6.444000 6.672000 6.444000 10.236000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
134.27361 369.31509 m
297.84839 369.31509 l
297.84839 297.42899 l
134.27361 297.42899 l
h
134.27361 369.31509 m
f
0 0 0 sc
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1296.5 122 m
1447 122 l
1447 188 l
1296.5 188 l
h
1296.5 122 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.089183 216.0609 333.37201 cm
-21.996 3.832001 m
(3%4\)5#&6)[ 8.220000 6.444000 6.888000 2.664000 6.000000 3.780000 3.996000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
314.15161 369.31509 m
477.72641 369.31509 l
477.72641 297.42899 l
314.15161 297.42899 l
h
314.15161 369.31509 m
f
0 0 0 sc
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1462 122 m
1612.5 122 l
1612.5 188 l
1462 188 l
h
1462 122 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.089183 395.93909 333.37201 cm
-26.004 3.832001 m
(72#25#8&%)[ 8.448000 6.444000 3.780000 6.444000 6.000000 3.780000 6.888000 3.780000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
228.2883 264.75339 m
297.84839 264.75339 l
297.84839 192.86729 l
228.2883 192.86729 l
h
228.2883 264.75339 m
f
0 0 0 sc
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1383 218 m
1447 218 l
1447 284 l
1383 284 l
h
1383 218 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.089183 263.06839 228.81039 cm
-21.996 -3.335999 m
(3%4\)5#&6')[ 8.220000 6.444000 6.888000 2.664000 6.000000 3.780000 3.996000 6.000000 0.000000 ] xS
-16.667999 11 m
(,$"4\)*)[ 7.776000 2.664000 6.672000 6.888000 2.664000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
314.15161 95.494331 m
314.15161 153.0032 l
314.15161 156.9713 350.7923 160.1918 395.93909 160.1918 c
441.08569 160.1918 477.72641 156.9713 477.72641 153.0032 c
477.72641 95.494331 l
477.72641 91.526222 441.08569 88.305717 395.93909 88.305717 c
350.7923 88.305717 314.15161 91.526222 314.15161 95.494331 c
f
0 0 0 sc
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1462 373.39999 m
1462 320.60001 l
1462 316.95679 1495.712 314 1537.25 314 c
1578.788 314 1612.5 316.95679 1612.5 320.60001 c
1612.5 373.39999 l
1612.5 377.04321 1578.788 380 1537.25 380 c
1495.712 380 1462 377.04321 1462 373.39999 c
1462 320.60001 m
1462 324.24319 1495.712 327.20001 1537.25 327.20001 c
1578.788 327.20001 1612.5 324.24319 1612.5 320.60001 c
S
/Cs1 SC
0 sc
1.086876 0 0 -1.089183 395.93909 124.2488 cm
-21.108 7.1320009 m
(.#8&24%)[ 7.776000 3.780000 6.888000 3.996000 6.444000 6.888000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
314.15161 264.75339 m
383.7117 264.75339 l
383.7117 192.86729 l
314.15161 192.86729 l
h
314.15161 264.75339 m
f
0 0 0 sc
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1462 218 m
1526 218 l
1526 284 l
1462 284 l
h
1462 218 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.089183 348.93161 228.81039 cm
-26.226 3.832001 m
(98&12##%&)[ 6.888000 6.888000 3.996000 10.236000 6.444000 3.780000 3.780000 6.444000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
408.16641 264.75339 m
477.72641 264.75339 l
477.72641 192.86729 l
408.16641 192.86729 l
h
408.16641 264.75339 m
f
0 0 0 sc
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1548.5 218 m
1612.5 218 l
1612.5 284 l
1548.5 284 l
h
1548.5 218 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.089183 442.94641 228.81039 cm
-26.226 3.832001 m
(98&12##%&)[ 6.888000 6.888000 3.996000 10.236000 6.444000 3.780000 3.780000 6.444000 0.000000 ] xS
2 w
/Cs2 SC
0 0 0 sc
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1425.728 92.378723 m
1408.944 111.8503 l
S
CM
249.6741 372.4501 m
259.4502 377.80991 l
253.52271 382.93011 l
h
249.6741 372.4501 m
f
0 J
0 j
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1402.676 119.1217 m
1411.671 114.2007 l
1406.217 109.4998 l
h
1402.676 119.1217 m
S
1 J
1 j
1483.272 92.378723 m
1500.056 111.8503 l
S
CM
362.32599 372.4501 m
358.47729 382.93011 l
352.5498 377.80991 l
h
362.32599 372.4501 m
f
0 J
0 j
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1506.324 119.1217 m
1502.783 109.4998 l
1497.329 114.2007 l
h
1506.324 119.1217 m
S
1 J
1 j
1386.823 188.4559 m
1394.629 205.78259 l
S
CM
245.213 268.52701 m
244.4946 279.6709 l
237.3598 276.4498 l
h
245.213 268.52701 m
f
0 J
0 j
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1398.572 214.5354 m
1397.911 204.30389 l
1391.3459 207.2614 l
h
1398.572 214.5354 m
S
1 J
1 j
1371.75 188.5 m
1371.75 300.60001 l
S
CM
216.0609 164.3307 m
219.9738 174.7869 l
212.14819 174.7869 l
h
216.0609 164.3307 m
f
0 J
0 j
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1371.75 310.20001 m
1375.35 300.60001 l
1368.15 300.60001 l
h
1371.75 310.20001 m
S
1 J
1 j
1522.177 188.4559 m
1514.371 205.78259 l
S
CM
366.78699 268.52701 m
374.6402 276.4498 l
367.5054 279.6709 l
h
366.78699 268.52701 m
f
0 J
0 j
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1510.428 214.5354 m
1517.6541 207.2614 l
1511.089 204.30389 l
h
1510.428 214.5354 m
S
1 J
1 j
1552.323 188.4559 m
1560.129 205.78259 l
S
CM
425.09119 268.52701 m
424.37271 279.6709 l
417.23779 276.4498 l
h
425.09119 268.52701 m
f
0 J
0 j
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1564.072 214.5354 m
1563.411 204.30389 l
1556.8459 207.2614 l
h
1564.072 214.5354 m
S
1 J
1 j
1509.073 284.4559 m
1516.936 301.91061 l
S
CM
378.14639 163.8261 m
377.42789 174.97 l
370.293 171.74879 l
h
378.14639 163.8261 m
f
0 J
0 j
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1520.88 310.6633 m
1520.219 300.43188 l
1513.6541 303.38931 l
h
1520.88 310.6633 m
S
1 J
1 j
1565.427 284.4559 m
1557.564 301.91061 l
S
CM
413.7316 163.8261 m
421.5849 171.74879 l
414.45001 174.97 l
h
413.7316 163.8261 m
f
0 J
0 j
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1553.62 310.6633 m
1560.8459 303.38931 l
1554.281 300.43188 l
h
1553.62 310.6633 m
S
1 1 1 sc
CM
15.26063 741.81561 m
596.73938 741.81561 l
596.73938 570.8139 l
15.26063 570.8139 l
h
15.26063 741.81561 m
f
1 w
1 J
1 j
0 0 0 sc
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1187 -220 m
1722 -220 l
1722 -63 l
1187 -63 l
h
1187 -220 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.089183 306 656.31488 cm
/F2.1[ 24 0 0 -24 0 0]sf
-262.5 -50.5 m
(./\)%*/%',\):%$\)*%5)[ 15.552000 12.888000 5.328000 12.888000 13.344000 12.888000 12.888000 6.672000 15.552000 5.328000 14.232000 12.888000 5.328000 5.328000 13.344000 12.888000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
134.27361 679.73218 m
297.84839 679.73218 l
297.84839 607.84613 l
134.27361 607.84613 l
h
134.27361 679.73218 m
f
0 0 0 sc
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1296.5 -163 m
1447 -163 l
1447 -97 l
1296.5 -97 l
h
1296.5 -163 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.089183 216.0609 643.78918 cm
/F2.1[ 12 0 0 -12 0 0]sf
-33.335999 3.832001 m
(,\):%$\)*%;25<)[ 7.776000 2.664000 7.116000 6.444000 2.664000 2.664000 6.672000 6.444000 5.556000 6.444000 6.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
314.15161 679.73218 m
477.72641 679.73218 l
477.72641 607.84613 l
314.15161 607.84613 l
h
314.15161 679.73218 m
f
0 0 0 sc
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1462 -163 m
1612.5 -163 l
1612.5 -97 l
1462 -97 l
h
1462 -163 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.089183 395.93909 643.78918 cm
-33.335999 3.832001 m
(,\):%$\)*%;25<)[ 7.776000 2.664000 7.116000 6.444000 2.664000 2.664000 6.672000 6.444000 5.556000 6.444000 6.000000 0.000000 ] xS
2 w
/Cs2 SC
0 0 0 sc
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1386.399 -96.541977 m
1434.677 13.72498 l
S
CM
288.63989 477.66809 m
288.0394 488.819 l
280.87079 485.6738 l
h
288.63989 477.66809 m
f
0 J
0 j
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1438.528 22.51902 m
1437.975 12.28112 l
1431.379 15.16885 l
h
1438.528 22.51902 m
S
1 J
1 j
1522.601 -96.541977 m
1474.323 13.72498 l
S
CM
323.3602 477.66809 m
331.12921 485.6738 l
323.9606 488.819 l
h
323.3602 477.66809 m
f
0 J
0 j
1.086876 0 0 -1.089183 -1274.861 502.1954 cm
1470.472 22.51902 m
1477.621 15.16885 l
1471.025 12.28112 l
h
1470.472 22.51902 m
S
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 612 792
%%EOF
