%!PS-Adobe-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (P13-7_f1.pdf)
%%Creator: (Preview: cgpdftops CUPS filter)
%%CreationDate: (Wednesday, November 07 2018 17:07:56 EST)
%%For: (Tim Jenness)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%PageOrder: Ascend
%RBINumCopies: 1
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments
userdict/dscInfo 5 dict dup begin
/Title(P13-7_f1.pdf)def
/Creator(Preview: cgpdftops CUPS filter)def
/CreationDate(Wednesday, November 07 2018 17:07:56 EST)def
/For(Tim Jenness)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *ExternalTray NotInstalled
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Finisher NotInstalled
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *InnerTray2 NotInstalled
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *OptionTray NotInstalled
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *ShiftTray NotInstalled
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIPaperPolicy PromptUser

  <</DeferredMediaSelection true>> setpagedevice
  <</Policies << /PageSize 2 /MediaType 2 >> >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *PageSize Letter
<<
  /PageSize [612 792] /ImagingBBox null >> setpagedevice 
  false setedgetoedge
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Resolution 600dpi
<</HWResolution[600 600]>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RPSBitsPerPixel 1BitsPerPixel
1 setbitsperpixel
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIPrintMode 0rhit

  << /PostRenderingEnhance false >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Duplex None
<</Duplex false>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *ColorModel CMYK
(cmyk) RCsetdevicecolor
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RPSRGBcorrect DetailBright
(precision-dark) RCsetrgbrevision
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RPSColorRendDict Auto
(auto) RCsetcolorprofile
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RPSDitherType Auto
(auto) RCsethalftonetype
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RPSBlackMode gray
(gray) (gray) (off)  /RDeviceProcSet 
/ProcSet findresource /SetPureBlack get exec
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RPSBlackOverPrint False
(off) RCsetblackoverprint
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RPSColorSep None
(none) RCsetprintseparation
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Rcmyksimulation Off
(None) RCsetcmyksimulation
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Rimagesm Off
(off) /RDeviceProcSet /ProcSet findresource /SetImageInterpolate get exec
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIRotateBy180 Off

  0 /RDeviceProcSet /ProcSet findresource /SetImageRotation get exec
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIOrientOvr Off
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RICollateKind Normal
/RICollateKindValue true def
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Collate True
<</Collate true
  /CollateDetails <</Type 6 /AlignSet RICollateKindValue>>
  >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *MediaType Auto
<< /MediaType (Auto) >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *OutputBin Default
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *StapleLocation None
<< /Staple 0 >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIPunch None
<< /Punch 0 >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIWatermark Off
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIWMText Confidential
userdict /RPS_WMdict get begin
 /RPS_WM_str (CONFIDENTIAL) def end
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIwmFont HelveticaB
userdict /RPS_WMdict get begin
 /RPS_WM_font /Helvetica-Bold def end
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIwmSize 36
userdict /RPS_WMdict get begin
 /RPS_WM_size 36 def end
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIwmAngle 45Deg
userdict /RPS_WMdict get begin
 /RPS_WM_angle 45 def end
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIwmTextStyle Gray
userdict /RPS_WMdict get begin
   /RPS_WM_color { 0 setgray }  bind  def
   /RPS_WM_Pattern {
    <<
        /PatternType 1
        /PaintType 1
        /TilingType 3
        /BBox [ 0 0 1 1 ]
        /XStep 1 
        /YStep 1 
        /PaintProc {
            begin
                RPS_WM_color
                8 8 true [ 8 0 0 -8 0 8 ]
                <88002200 88002200> imagemask
            end
        }
    >> [ 1 0 0 -1 0 1 ] makepattern
    setpattern }
   bind def
   /RPS_WM_draw {   %% RPS_WM_mask
    RPS_WM_str false charpath fill
  } bind def end
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIBannerPageInputSlot Auto
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIBannerPageMediaType Auto
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIBannerPagePrint False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Booklet None
<<
   /Booklet  0
>>
/RDeviceProcSet /ProcSet findresource /SetBooklet get exec
%%EndFeature
} stopped cleartomark
% x y w h ESPrc - Clip to a rectangle.
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
% x y w h ESPrf - Fill a rectangle.
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
% x y w h ESPrs - Stroke a rectangle.
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 612 792
%%BeginPageSetup
%%EndPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: FKIYGJ+HelveticaNeue-Bold
%!FontType1-1.0: FKIYGJ+HelveticaNeue-Bold 1.0000.1.0000
14 dict begin/FontName /FKIYGJ+HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /D put
dup 34 /a put
dup 35 /t put
dup 36 /space put
dup 37 /B put
dup 38 /u put
dup 39 /l put
dup 40 /e put
dup 41 /r put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<



00001C2BBF0012002C0025001A0012000C0000001C2BBF00130024001F001A0012000C0000001C2B00BF000E0030002500200017000C0000001C2BBF000F0034002B00200017000C0000001C2BBF0010002A0025001A0012000C0000001C2B00BA00140004001B2BB8000D20457D691844B8000A2B00BA00010002000C2B01BA00030002000C2B01BE00030028002000190012000B00122BBE00040024001D00170011000A00122B00BE00010033002A00210017000E00122BBE0002002A0022001B0013000C00122B00BA0005000400112BB8000020457D691844B800002B00
00>] def
/CharStrings 10 dict dup begin
/.notdef 0 def
/space 1 def
/B 2 def
/D 3 def
/a 4 def
/e 5 def
/l 6 def
/r 7 def
/t 8 def
/u 9 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1018 -481 1437 1141}def
/UniqueID 4174458 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B4F1C51BADFF3495C2924BE71970B75EDF2A199B50F98194813A33F0031D51718A2986D693660B31148EB7E847AF413293AC0BB72B526878421A7FC76052172227BCD5D22EE96DD8463A8FCD4ECF18B213CEDEB0652C35DD56FBBEC6ED280ABCF8245D10844C98E67F758BBB6F049C5B0C98EFEE62F6098D0F9E29D809E74FC08BA638D00C5191A8F9DF624AC25E5D0647F2892522CD3A5AE929C3DA04EE86C21624258CEDE6AC2B5C89376235AF0B50E5D619F464D34BD57187BEAAC446A23A519F27EF69C6590E0ACD04C87C97B4933FE3C3C347777D255BB390057AC032E04CAE01F1182FD54B4C1088F67DF9E6C26451C9B9E8A0C146DA84FC4CB56132EBDD79A16DB1EC8451B2CA8A6862F4ACAB1A5F6756210D89A31B5177EEFAB01FD41978479028B635DC47DD1120B821C0233490AA0EDAB07F49BF50FE5C2CBEC9D33194234380CACA79D643F4D34DB0043CA72EC27145534F38710AC38AEFC85B8CE8DC5206A06260AA34D0B0A4C41BC3151801E9A72FEDCECE37C286618A14B591879A157186E70C5B29B7630CFB959CD7CA19813EBCAF0B7053FA22D5A212E87A99D176B43711763A94C4F6BA04C4FF1ADBAFA95BEB71DBBC8432CBA4B67C8E01BA5134FC835833F753754C2319EB37A48C085F6334DED38DC3C74A1E4A235B8E4906CC0C898BCBF1F6FEF7AA4D79DDBBAF4CAFAAB728A7352B922594ABF0B7A537AD0B04E9976680F3D8F69BDBF74DCCD7ABE336BCA59CB91A1608D526CCDAF5
37B1AED663CCD7039298B694CBFD4DFC61E6216C1CFDA33BEDA634A9411BF0967A5482131C3634A5BDBB6802DC16867447E3B86BCFB65F80125EE1CA14DC905E79B0CAA0AF980297FB1AA73163CB00CA30915084F8FE3A2D19A4E19EEA21372D6967840DBCBB91643C9DD5C123D8FF6E5320ED483C4D2069F21D2E3CCC4809A4628DA4DB0D26D7DFDD72FE8EE34A02BC1A56544BE5701B4AA50C6C13CEEF7E0B10299022DD5A370E0030E81FECFD64E5B4D33B4E6D62A5FA96B2F366F505DE1CC2534542E6970774D3797697CFAD9CE6251032FAA6B327A1D93A69622F74864CBA2C66CC5D080C23D41A4E70AC1F6DE08052EC1C0B4EDE5155341E39A1B177EA3713B4ED7A268E446DA7BEDAC0D20A57126C3E17A079BBDEE2234D67155C10C3B584073E21E252F78F68C86BCC7EF66DAEB64D931B5A0F25E570E8941237F0242F725CEB51011FE04CE71525358FA7A1E6B62D37B0E6D24B98F6C0430B0E453B46334F0A9BFA1347A56E17DDADD2EEE2B9EE054D318A3875CB927165A3DE3351BA5CF5FC09878D01C1C3A721069B73A1DC28F9C11CBA3E23E7430AEAC4DB221F8FEAEBBA42A18ACA714DB6B37D017445FFDE0CB5939FCE16D402E5C57FA75635CAFEC89D1353EA69DB50B8975F550D88E543B065E18988CB1A5A54AF19129CBAFD4AF543943369B027A3712FA3CB365696F2A9CEA460AFDAD59F6222D1CE11102ADF4ACC586F8986DE8EEC4D5FC466E7F0A4BF17A6060BA322095C51E64C9F70BF4D1CE6DAEBAE144B67E0E06705D81A088916611CC7A151A42F0EF724AEFC9973D74ABA7D171B2FF7FFE2276D1548B24D71A595BF1CB17EDAAC8C81C36FA2B2459B148E14AE776BCC6424730147BE1283320258A9194EB441BDDE893870F725F1C4A385A29A83A4704A0F1B8D53E6462490796866B41A6E5FA7E247C26426464B80514058FDE89ADDA294463CB3C4CBF0B7701AA8EC76368E86248A284C56D4C2297EB8A6FACA69E9A781905094CB9D1D4426961ACD30B355ABEBE1160191E0C39A0D582B916A503B276CAE17713EF877620BDB5F6BC38BF19BE31B6A2F7113C8675AD3F3061427EBB1367E3D7120C7AE441E3515A8F329340DC037DA4A075EDD08AAC88075241AE50BFFA52A0C288A6BF8CF2998969A37D03E62FED0B132677EFF569479F3BE1C2DF5E3C0D84F9F69E9607F810C49953C634B90761C56485B32A71A0D122DD773B525322E980735335FFEC5DC63F7092AD790A4AB932B9E1293F5E5AB88B1356F3E6C4EB7B34E45DBAC5A2E4C130A502E9820F8542AE4AAB6596CD31E8FDBEC924BBE8C8EDB41C1F9052FD2A04FB330F002E83B06469C0D3CB7C4BF7D2A9DB71B9A86B70AA4F5BB5980DD86B35810825F842482EE8FF9CB9EFC5F98399BB7EAA29F57B77F00670F9DE7A7AC015D52C760DB86FC8DA2AD93B7
B76A047F023DCEBD4E1B44669BBB6F3799BC6C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/FKIYGJ+HelveticaNeue-Bold cguidfix
/F1.1/FKIYGJ+HelveticaNeue-Bold renmfont
%RBIBeginFontSubset: NCSYGY+HelveticaNeue
%!FontType1-1.0: NCSYGY+HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /NCSYGY+HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /B put
dup 34 /u put
dup 35 /t put
dup 36 /l put
dup 37 /e put
dup 38 /r put
dup 39 /space put
dup 40 /C put
dup 41 /i put
dup 42 /n put
dup 43 /A put
dup 44 /P put
dup 45 /I put
dup 46 /S put
dup 47 /c put
dup 48 /h put
dup 49 /m put
dup 50 /a put
dup 51 /R put
dup 52 /g put
dup 53 /s put
dup 54 /y put
dup 55 /D put
dup 56 /o put
dup 57 /F put
dup 58 /p put
dup 59 /T put
dup 60 /k put
dup 61 /less put
dup 62 /greater put
dup 63 /one put
dup 64 /period put
dup 65 /asterisk put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<


290099002900A9002900B9002900C90029000D5DB80012DCBA0016000B0012111239B8000110B80022D0B8001210B8002EDC00BA0022000C00032BB8002210BA000B000100032BB8000B10BA0000002300032BB8000010BA0016002300001112393031133533321E0215140623011121323E0235342627353E01353426272E0323033533321E0215140623ADBE1F372A184751FEE301593551371C464233373123102D343517A4D91E382B1A473F0197E307182C2639390133FD3623394A27425C0E02145339364A150A0A0501FD86F70B1B2E233C4400000001002BFFF002AA02DB0025006DBA001E000B00032BB8001E10411B0006001E0016001E0026001E0036001E0046001E0056001E0066001E0076001E0086001E0096001E00A6001E00B6001E00C6001E000D5D410500D5001E00E5001E00025D00BA0019001000032BB8001910BA0006002300032BB8000610303101332E0323220E0215141E0233323637230E0323222E0235343E0233321602445F08344E6438527F552C29527C53899E0E5F031E35492F405C3B1C1C3B5B404B6D01F339573A1E3B66894E4E88643996872C4C371F30516D3D386851304C0000000002004E0000029A02CA000E0019007DB8001B2FBA0001000F00032BB8000110B8001B10B80016DCB80007DC410500DA000700EA000700025D411B0009000700190007002900070039000700490007005900070069000700790007008900070099000700A9000700B9000700C90007000D5D00BA0000001000032BB8000010BA000F000100032BB8000F103031371133321E0215140E0423031133323E0235342623ADA0425A39191B2A35363010FDF559825428B2A550022A25476540425D3E241305027AFD36325F8B5AACA80000000001004E0000022302CA0009002FBA0007000000032BB8000710B80002D000B800012FBA0000000700032BB8000010BA0006000300032BB80006103031131133112135213521354E5F0148FEB8017602CAFD36014750E35000010052000000B102CA00030017BA0003000000032BB800031000B800012FB800002F303113113311525F02CAFD3602CA0000000002004E0000026202CA000800130089B800152FBA0001000900032BB8000110B8001510B80010DCB80005DC410500DA000500EA000500025D411B0009000500190005002900050039000500490005005900050069000500790005008900050099000500A9000500B9000500C90005000D5DB8000110B8000BD000B8000A2FBA0009000100032BB8000910BA0000000C00032BB800001030311311333216151406270111331133163635342623ADBA514B4B51FEE75FDA6C6F6F6C0174010643404044010156FD360124017064646F000002004E0000029002CA0020002B009DB8002D2FBA0023000000032BB8002310



5A20405E3D3E5D402020405D3E3D5E402001022F49321A1A32492F2F49311A1A31492F39624929294962393963492A2A4963000000020043FF3B022D02110018002C00ADB8002E2FBA0018000000032BB8001810B80002D0B8001810B80004D0B800042FB8002E10B8000EDCB8001810B80016D0B800162FB8000E10B80019DC410500DA001900EA001900025D411B0009001900190019002900190039001900490019005900190069001900790019008900190099001900A9001900B9001900C90019000D5DB8001810B80023D0B800232F00B800012FBA0013002800032BB8001310BA001E000900032BB8001E10303113113311331E0333323E0235342E0223220607233505140E0223222E0235343E0233321E024355020E292E2F133B593B1D1E3B593C365A1502013B10243B2C2C3E271211263C2B293D27130205FD36010A171F12082A49623737624B2C272B46FE2648382221364726244637222036450000000001003D0000014D0213000E0027BA0003000100032BB8000310B8000DD0B8000D2F00B800012FBA0009000800032BB8000910303113113335343E02333526060723353D55142C4833455A1F020205FDFBE6324D361C5A023C3F6D000001001FFFF501D60211003A00ABBA0000000100032BBA0020001F00032BB8002010BA0031001F0020111239B800312F410500DA003100EA003100025D411B0009003100190031002900310039003100490031005900310069003100790031008900310099003100A9003100B9003100C90031000D5DB8000BDCB8000010B8002ADCB80015DCB8000B10B8003CDC00BA0036000600032BB8003610BA0025001A00032BB8002510B8000610B80000DCB8002510B8001FDC303137231E0333323E0235342E02272E0335343E0233321E0217332E0323220E0215141E0415140E0223222E02745502243C4E2B274F3F271D2F3D201E3C301F142027131529221602550322394A2C22453723324B584B3218252C141A312718A3304329120F263E2F2532211407070D131D1614190F06091421192F3F250F1123382732381F11152221181F10060A1727000100090000011D02A00017005BBA0001000200032BB8000110B8000210B80006D0B8000310B80007D0B8000210B80017DCB8000DD0B8000110B80014D000B800012FBA000F000C00032BB8000F10BA0004000500032BB8000410B80000D0B8000510B80015D030311335231523153311141E023B013523222E0235113335B65558580E1D2F21412714190E056702059B9B4BFEB7242C18094B030A120F01414B00000000010040FFF501EC020500180051BA000C000D00032BB8000C10BA0001000200032BB8000110B8000210B80016D0B800162FBA001700020001111239B8000210B80018D0B800182F00B800012FB8000C2FBA0008

00>] def
/CharStrings 34 dict dup begin
/.notdef 0 def
/space 1 def
/asterisk 2 def
/period 3 def
/one 4 def
/less 5 def
/greater 6 def
/A 7 def
/B 8 def
/C 9 def
/D 10 def
/F 11 def
/I 12 def
/P 13 def
/R 14 def
/S 15 def
/T 16 def
/a 17 def
/c 18 def
/e 19 def
/g 20 def
/h 21 def
/i 22 def
/k 23 def
/l 24 def
/m 25 def
/n 26 def
/o 27 def
/p 28 def
/r 29 def
/s 30 def
/t 31 def
/u 32 def
/y 33 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9315F0017FC3864FF8D40C74661F4AC4F359AB40455CCBD4B88F0CECF0FBBCE3D81E443BF2B3BDABA64DE646528D274216E141CC2BD3049E9F7D1A996BC56CAFBBBB18F69063033C6B97D9FB89E146ACD1A18BD717F52681A976D83447D96DD3627801822CD048FA85000DF7DA988897EC9B5A187369A8577991E6CD68538BEC3317CBBD107CF1D7E5930C47EA363DA7F3A9D00B498DF7D1771E551593B753026550F3E54415FCCEEA0CD8298146683CB99189E8C5D2265CD72C6EDDADA5F9908402B6EB857638FBA7810B18F5DF7A5388FDB847C61B38381554B31DDDAAAD96E8957BBB3A674E07545CDAD94B1F811D8C1C932FD10CDFAD5F355BEAA59A20362938986F670172D9953FD20398F583B5D84BE83D41FDFD7CA4B7F5253E46CC09E6E0E8258C046DB091261EE61CA7424D97466BAAD864AE757AC34909FA4D85BD466B6AEBEE9AF60A246D4A8D552C1F4BE75D5F88AF5E0E00F4866AB8A2D92C83C0EA96564F4EA2D4DDEC01EBF82A6E53E9E0050FE2925A3D92D2BC35CEBBBCE4C3571CBA45488CB52CBD56ABC1BF9650D007B9ED9B519285436E30782997BB09374B7E2634A449478A1B51FF6ABBC7632B5229C714C10C581196C77988F6346A9C30B1B3A5A852DEB4D0D26B7F682FE19D97E6825BC5CED37DD75AC4F56D5B63A3241595D64D9EADC98902724D9ECA7063D196936F11E5BB4F32C2F05B57138E71B52BE4236B63C28760A1E225DA7936AA34C88102BCE8D4123602842895F26150





0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/NCSYGY+HelveticaNeue cguidfix
/F2.1/NCSYGY+HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
12 18.310539 588 755.37891 rc
12 18.310539 m
600 18.310539 l
600 773.68945 l
12 773.68945 l
h
f
/Cs2 SC
1 1 1 sc
12 773.68951 m
600 773.68951 l
600 18.310539 l
12 18.310539 l
h
12 773.68951 m
f
15.26063 571.53052 m
596.73938 571.53052 l
596.73938 21.571159 l
15.26063 21.571159 l
h
15.26063 571.53052 m
f
5 w
1 J
1 j
0 0 0 sc
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1187 -35 m
1722 -35 l
1722 471 l
1187 471 l
h
1187 -35 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.086876 306 296.55081 cm
/F1.1[ 24 0 0 -24 0 0]sf
-262.5 -225 m
(!"#"$%&#'\(\))[ 17.784000 13.776000 8.448000 13.776000 6.672000 16.896000 14.232000 8.448000 6.192000 13.776000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
134.27361 505.23111 m
477.72641 505.23111 l
477.72641 433.49719 l
134.27361 433.49719 l
h
134.27361 505.23111 m
f
1 w
0 0 0 sc
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1296.5 26 m
1612.5 26 l
1612.5 92 l
1296.5 92 l
h
1296.5 26 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.086876 306 469.36411 cm
/F2.1[ 12 0 0 -12 0 0]sf
-43.998001 3.832001 m
(!"#$%&'\($\)%*#'+,-)[ 8.220000 6.672000 3.780000 2.664000 6.444000 3.996000 3.336000 8.664000 2.664000 2.664000 6.444000 6.672000 3.780000 3.336000 7.776000 7.776000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
134.27361 47.221439 m
134.27361 104.6085 l
134.27361 108.5682 170.91431 111.7819 216.061 111.7819 c
261.2077 111.7819 297.84839 108.5682 297.84839 104.6085 c
297.84839 47.221439 l
297.84839 43.26173 261.2077 40.048061 216.061 40.048061 c
170.91431 40.048061 134.27361 43.26173 134.27361 47.221439 c
f
0 0 0 sc
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1296.5 447.39999 m
1296.5 394.60001 l
1296.5 390.95679 1330.212 388 1371.75 388 c
1413.288 388 1447 390.95679 1447 394.60001 c
1447 447.39999 l
1447 451.04321 1413.288 454 1371.75 454 c
1330.212 454 1296.5 451.04321 1296.5 447.39999 c
1296.5 394.60001 m
1296.5 398.24319 1330.212 401.20001 1371.75 401.20001 c
1413.288 401.20001 1447 398.24319 1447 394.60001 c
S
/Cs1 SC
0 sc
1.086876 0 0 -1.086876 216.061 75.91497 cm
-22.007999 7.1320009 m
(./0%12)[ 7.776000 6.444000 6.672000 6.444000 10.236000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
134.27361 400.8909 m
297.84839 400.8909 l
297.84839 329.1571 l
134.27361 329.1571 l
h
134.27361 400.8909 m
f
0 0 0 sc
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1296.5 122 m
1447 122 l
1447 188 l
1296.5 188 l
h
1296.5 122 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.086876 216.061 365.02399 cm
-21.996 3.832001 m
(3%4\)5#&6)[ 8.220000 6.444000 6.888000 2.664000 6.000000 3.780000 3.996000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
314.15161 400.8909 m
477.72641 400.8909 l
477.72641 329.1571 l
314.15161 329.1571 l
h
314.15161 400.8909 m
f
0 0 0 sc
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1462 122 m
1612.5 122 l
1612.5 188 l
1462 188 l
h
1462 122 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.086876 395.939 365.02399 cm
-26.004 3.832001 m
(72#25#8&%)[ 8.448000 6.444000 3.780000 6.444000 6.000000 3.780000 6.888000 3.780000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
314.15161 47.221439 m
314.15161 104.6085 l
314.15161 108.5682 350.7923 111.7819 395.939 111.7819 c
441.08569 111.7819 477.72641 108.5682 477.72641 104.6085 c
477.72641 47.221439 l
477.72641 43.26173 441.08569 40.048061 395.939 40.048061 c
350.7923 40.048061 314.15161 43.26173 314.15161 47.221439 c
f
0 0 0 sc
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1462 447.39999 m
1462 394.60001 l
1462 390.95679 1495.712 388 1537.25 388 c
1578.788 388 1612.5 390.95679 1612.5 394.60001 c
1612.5 447.39999 l
1612.5 451.04321 1578.788 454 1537.25 454 c
1495.712 454 1462 451.04321 1462 447.39999 c
1462 394.60001 m
1462 398.24319 1495.712 401.20001 1537.25 401.20001 c
1578.788 401.20001 1612.5 398.24319 1612.5 394.60001 c
S
/Cs1 SC
0 sc
1.086876 0 0 -1.086876 395.939 75.91497 cm
-21.108 7.1320009 m
(.#8&24%)[ 7.776000 3.780000 6.888000 3.996000 6.444000 6.888000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
361.159 282.42139 m
430.71899 282.42139 l
430.71899 210.68761 l
361.159 210.68761 l
h
361.159 282.42139 m
f
0 0 0 sc
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1505.25 231 m
1569.25 231 l
1569.25 297 l
1505.25 297 l
h
1505.25 231 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.086876 395.939 246.5545 cm
-26.226 3.832001 m
(98&12##%&)[ 6.888000 6.888000 3.996000 10.236000 6.444000 3.780000 3.780000 6.444000 0.000000 ] xS
2 w
/Cs2 SC
0 0 0 sc
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1418.155 101.1651 m
1400.522 121.6213 l
S
CM
273.30939 431.43909 m
266.93951 430.04221 l
266.4971 423.53589 l
272.86691 424.93289 l
h
273.30939 431.43909 m
f
0 J
0 j
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1424.422 93.893608 m
1418.562 95.178902 l
1418.155 101.1651 l
1424.015 99.879784 l
h
1424.422 93.893608 m
S
1 J
1 j
1490.845 101.1651 m
1508.478 121.6213 l
S
CM
338.69061 431.43909 m
339.13309 424.93289 l
345.5029 423.53589 l
345.06049 430.04221 l
h
338.69061 431.43909 m
f
0 J
0 j
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1484.578 93.893608 m
1484.985 99.879784 l
1490.845 101.1651 l
1490.438 95.178902 l
h
1484.578 93.893608 m
S
1 J
1 j
[
8
8
] 0 d
1371.75 188.5 m
1371.75 374.60001 l
S
CM
216.061 115.912 m
219.9738 126.346 l
212.14819 126.346 l
h
216.061 115.912 m
f
0 J
0 j
[] 0 d
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1371.75 384.20001 m
1375.35 374.60001 l
1368.15 374.60001 l
h
1371.75 384.20001 m
S
1 J
1 j
1537.25 200.10001 m
1537.25 230.5 l
S
CM
395.939 326.43991 m
392.02621 321.2229 l
395.939 316.00589 l
399.85181 321.2229 l
h
395.939 326.43991 m
f
0 J
0 j
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1537.25 190.5 m
1533.65 195.3 l
1537.25 200.10001 l
1540.85 195.3 l
h
1537.25 190.5 m
S
1 J
1 j
[
8
8
] 0 d
1537.25 297.5 m
1537.25 374.60001 l
S
CM
395.939 115.912 m
399.85181 126.346 l
392.02621 126.346 l
h
395.939 115.912 m
f
0 J
0 j
[] 0 d
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1537.25 384.20001 m
1540.85 374.60001 l
1533.65 374.60001 l
h
1537.25 384.20001 m
S
1 1 1 sc
CM
15.26063 772.6026 m
596.73938 772.6026 l
596.73938 601.96301 l
15.26063 601.96301 l
h
15.26063 772.6026 m
f
1 w
1 J
1 j
0 0 0 sc
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1187 -220 m
1722 -220 l
1722 -63 l
1187 -63 l
h
1187 -220 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.086876 306 687.28278 cm
/F2.1[ 24 0 0 -24 0 0]sf
-262.5 -50.5 m
(./\)%*/%',\):%$\)*%5)[ 15.552000 12.888000 5.328000 12.888000 13.344000 12.888000 12.888000 6.672000 15.552000 5.328000 14.232000 12.888000 5.328000 5.328000 13.344000 12.888000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
134.27361 710.65057 m
297.84839 710.65057 l
297.84839 638.91681 l
134.27361 638.91681 l
h
134.27361 710.65057 m
f
0 0 0 sc
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1296.5 -163 m
1447 -163 l
1447 -97 l
1296.5 -97 l
h
1296.5 -163 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.086876 216.061 674.78369 cm
/F2.1[ 12 0 0 -12 0 0]sf
-33.335999 3.832001 m
(,\):%$\)*%;25<)[ 7.776000 2.664000 7.116000 6.444000 2.664000 2.664000 6.672000 6.444000 5.556000 6.444000 6.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
314.15161 710.65057 m
477.72641 710.65057 l
477.72641 638.91681 l
314.15161 638.91681 l
h
314.15161 710.65057 m
f
0 0 0 sc
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1462 -163 m
1612.5 -163 l
1612.5 -97 l
1462 -97 l
h
1462 -163 m
S
/Cs1 SC
0 sc
1.086876 0 0 -1.086876 395.939 674.78369 cm
-33.335999 3.832001 m
(,\):%$\)*%;25<)[ 7.776000 2.664000 7.116000 6.444000 2.664000 2.664000 6.672000 6.444000 5.556000 6.444000 6.000000 0.000000 ] xS
2 w
[
8
8
] 0 d
/Cs2 SC
0 0 0 sc
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1386.399 -96.541977 m
1434.677 13.72498 l
S
CM
288.63989 509.0145 m
288.0394 520.14178 l
280.87079 517.00317 l
h
288.63989 509.0145 m
f
0 J
0 j
[] 0 d
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1438.528 22.51902 m
1437.975 12.28112 l
1431.379 15.16885 l
h
1438.528 22.51902 m
S
1 J
1 j
[
8
8
] 0 d
1522.601 -96.541977 m
1474.323 13.72498 l
S
CM
323.36011 509.0145 m
331.12921 517.00317 l
323.9606 520.14178 l
h
323.36011 509.0145 m
f
0 J
0 j
[] 0 d
1.086876 0 0 -1.086876 -1274.861 533.48981 cm
1470.472 22.51902 m
1477.621 15.16885 l
1471.025 12.28112 l
h
1470.472 22.51902 m
S
1 1 1 sc
CM
238.1335 558.51929 m
307.6936 558.51929 l
307.6936 531.34741 l
238.1335 531.34741 l
h
238.1335 558.51929 m
f
/Cs3 SC
0 sc
1.086876 0 0 -1.086876 272.91351 544.93329 cm
-26.958 3.832001 m
(=="5%5>>)[ 7.200000 7.200000 6.672000 6.000000 6.444000 6.000000 7.200000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
306.48471 558.07483 m
376.0448 558.07483 l
376.0448 530.90289 l
306.48471 530.90289 l
h
306.48471 558.07483 m
f
/Cs1 SC
0 sc
1.086876 0 0 -1.086876 341.2648 544.48877 cm
-26.958 3.832001 m
(=="5%5>>)[ 7.200000 7.200000 6.672000 6.000000 6.444000 6.000000 7.200000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
365.2348 429.14969 m
395.6673 429.14969 l
395.6673 401.97781 l
365.2348 401.97781 l
h
365.2348 429.14969 m
f
/Cs1 SC
0 sc
1.086876 0 0 -1.086876 380.45099 415.56381 cm
-8.7840004 3.832001 m
(?@@A)[ 6.672000 3.336000 3.336000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
226.658 428.62189 m
245.1349 428.62189 l
245.1349 401.45001 l
226.658 401.45001 l
h
226.658 428.62189 m
f
/Cs1 SC
0 sc
1.086876 0 0 -1.086876 235.8965 415.03601 cm
-3.336 3.832001 m
(?)s
/Cs2 SC
1 1 1 sc
CM
181.28101 181.52769 m
250.841 181.52769 l
250.841 154.3558 l
181.28101 154.3558 l
h
181.28101 181.52769 m
f
/Cs1 SC
0 sc
1.086876 0 0 -1.086876 216.061 167.9418 cm
-26.958 3.832001 m
(=="5%5>>)[ 7.200000 7.200000 6.672000 6.000000 6.444000 6.000000 7.200000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
361.159 182.4682 m
430.71899 182.4682 l
430.71899 155.2963 l
361.159 155.2963 l
h
361.159 182.4682 m
f
/Cs1 SC
0 sc
1.086876 0 0 -1.086876 395.939 168.8822 cm
-26.958 3.832001 m
(=="5%5>>)[ 7.200000 7.200000 6.672000 6.000000 6.444000 6.000000 7.200000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
401.37341 310.13681 m
431.80591 310.13681 l
431.80591 282.9649 l
401.37341 282.9649 l
h
401.37341 310.13681 m
f
/Cs1 SC
0 sc
1.086876 0 0 -1.086876 416.5896 296.55081 cm
-8.7840004 3.832001 m
(?@@A)[ 6.672000 3.336000 3.336000 0.000000 ] xS
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 612 792
%%EOF
